<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Root Config</title>
  <!--
    Remove this if you only support browsers that support async/await.
    This is needed by babel to share largeish helper code for compiling async/await in older
    browsers. More information at https://github.com/single-spa/create-single-spa/issues/112
  -->
  <script src="https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.7/runtime.min.js"></script>
  <!--
    This CSP allows any SSL-enabled host and for arbitrary eval(), but you should limit these directives further to increase your app's security.
    Learn more about CSP policies at https://content-security-policy.com/#directive
  -->
  <meta http-equiv="Content-Security-Policy" content="default-src 'self' https: localhost:*; script-src 'unsafe-inline' 'unsafe-eval' https: localhost:*; connect-src https: localhost:* ws://localhost:*; style-src 'unsafe-inline' https:; object-src 'none';">
  <meta name="importmap-type" content="systemjs-importmap" />
  <!-- If you wish to turn off import-map-overrides for specific environments (prod), uncomment the line below -->
  <!-- More info at https://github.com/joeldenning/import-map-overrides/blob/master/docs/configuration.md#domain-list -->
  <!-- <meta name="import-map-overrides-domains" content="denylist:prod.example.com" /> -->

  <!-- Shared dependencies go into this import map. Your shared dependencies must be of one of the following formats:

    1. System.register (preferred when possible) - https://github.com/systemjs/systemjs/blob/master/docs/system-register.md
    2. UMD - https://github.com/umdjs/umd
    3. Global variable

    More information about shared dependencies can be found at https://single-spa.js.org/docs/recommended-setup#sharing-with-import-maps.
  -->
  <script type="systemjs-importmap">
    {
      "imports": {
        "single-spa": "https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js",
        "single-spa-layout": "https://unpkg.com/single-spa-layout@1.0.0-beta.2/dist/system/single-spa-layout.min.js",
        "@angular/core": "https://cdn.jsdelivr.net/npm/@esm-bundle/angular__core@12.1.1/system/es2015/ivy/angular-core.min.js",
        "@angular/common": "https://cdn.jsdelivr.net/npm/@esm-bundle/angular__common@12.1.1/system/es2015/ivy/angular-common.min.js",
        "@angular/router": "https://cdn.jsdelivr.net/npm/@esm-bundle/angular__router@12.1.1/system/es2015/ivy/angular-router.min.js",
        "@angular/platform-browser": "https://cdn.jsdelivr.net/npm/@esm-bundle/angular__platform-browser@12.1.1/system/es2015/ivy/angular-platform-browser.min.js",
        "@angular/material": "https://unpkg.com/browse/@angular/material@12.1.1/",
        "react": "https://unpkg.com/react@16.7.0/umd/react.production.min.js",
        "react-dom": "https://unpkg.com/react-dom@16.7.0/umd/react-dom.production.min.js"
      }
    }
  </script>
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js" as="script">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />

  <!-- Add your organization's prod import map URL to this script's src  -->
  <!-- <script type="systemjs-importmap" src="/importmap.json"></script> -->

  <% if (isLocal) { %>
  <script type="systemjs-importmap">
    {
      "imports": {
        "@pb/root-config": "//localhost:9000/pb-root-config.js",
        "@pb/angular-single": "//localhost:4200/main.js",
        "@pb/angular-multiples": "//localhost:4201/main.js",
        "@pb/navbar": "//localhost:4203/main.js",
        "@pb/react-single": "//localhost:4204/pb-react-single.js"
      }
    }
  </script>
  <% } %>

  <!--
    If you need to support Angular applications, uncomment the script tag below to ensure only one instance of ZoneJS is loaded
    Learn more about why at https://single-spa.js.org/docs/ecosystem-angular/#zonejs
  -->
  <script src="https://cdn.jsdelivr.net/npm/zone.js@0.11.4/dist/zone.min.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/import-map-overrides@2.2.0/dist/import-map-overrides.js"></script>
  <% if (isLocal) { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.10.1/dist/system.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.10.1/dist/extras/amd.js"></script>
  <% } else { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.10.1/dist/system.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.10.1/dist/extras/amd.min.js"></script>
  <% } %>
  <template id="single-spa-layout">
    <single-spa-router>
      <nav class="topnav">
        <application name="@pb/navbar"></application>
      </nav>
      <div class="main-content">
        <route path="angular-single">
          <application name="@pb/angular-single"></application>
        </route>
        <route path="angular-multiples">
          <application name="@pb/angular-multiples"></application>
        </route>
        <route path="react-single">
          <application name="@pb/react-single"></application>
        </route>
      </div>
    </single-spa-router>
  </template>
</head>
<body style="margin: 0;">
  <script>
    Promise.all([System.import('single-spa'), System.import('single-spa-layout')]).then(([singleSpa, singleSpaLayout]) => {
      const { constructApplications, constructLayoutEngine, constructRoutes } = singleSpaLayout;
      const { registerApplication, start } = singleSpa;

      const routes = constructRoutes(document.querySelector('#single-spa-layout'));
      const applications = constructApplications({
        routes,
        loadApp({ name }) {
          return System.import(name);
        },
      });
      const layoutEngine = constructLayoutEngine({ routes, applications });
      applications.forEach(registerApplication);

      start();
    });
  </script>
  <import-map-overrides-full show-when-local-storage="devtools" dev-libs></import-map-overrides-full>
</body>
</html>
